language: node_js
node_js:
- '10'

# by default install just yarn
before_install: . ./scripts/travis-install-yarn.sh
install:
    # make it colorful
    - export FORCE_COLOR=1
    # Install the dependencies
    - yarn
    # Build setup the build
    - yarn setup

# set up build matrix
# specify jobs (stages are serial, and scripts are parallel within a stage)
jobs:
  # stop if given a reason
  fast-finish: true

  include:
  # tests only on master and on pull-request
  - stage: Tests
    name: Test Packages
    if: branch = master
    addons:
      apt:
        packages:
          - docker-ce
    services:
        - docker
        - elasticsearch
    before_install:
        - . ./scripts/travis-install-docker-compose.sh
        - . ./scripts/travis-install-yarn.sh
        - . ./scripts/travis-install-es.sh
    script:
        - '[[ -z "$DEBUG" ]] && yarn test || yarn test:debug | yarn bunyan -o short'
    after_success:
      - bash <(curl -s https://codecov.io/bash)

  # benchmarks and linting, only on pull-requests
  - script:
    name: Benchmarks and Linting
    if: branch = master AND type = pull_request
    script:
        - yarn lint
        - yarn benchmark

  # test end-to-end tests, only on pull-requests
  - script:
    name: End-to-End Tests
    if: branch = master AND type IN (pull_request, cron) AND fork = false
    addons:
      apt:
        packages:
          - docker-ce
    services:
        - docker
        - elasticsearch
    before_install:
        - . ./scripts/travis-install-docker-compose.sh
        - . ./scripts/travis-install-yarn.sh
        - . ./scripts/travis-install-es.sh
    before_script:
        - cd e2e
    script: yarn test:ci

  # if not a tagged build and is on master
  - stage: Publish
    name: NPM Publish & Publish Documentation
    if: tag IS blank AND branch = master AND type NOT IN (pull_request, cron)
    addons:
      apt:
        packages:
          - jq
    before_script: . ./scripts/travis-setup-credentials.sh
    script: yarn docs:update
    deploy:
      - provider: script
        skip_cleanup: true
        script: ./scripts/publish-packages.sh
      - provider: script
        skip_cleanup: true
        script: ./scripts/publish-documentation.sh

  # Create tagged releases
  - stage: Release
    name: Release
    if: tag IS present AND type NOT IN (pull_request, cron)
    addons:
      apt:
        packages:
          - jq
          - docker-ce
    services:
        - docker
    before_script: . ./scripts/travis-setup-credentials.sh
    script: true
    deploy:
      - provider: script
        script: ./scripts/docker-release.sh tag
        on:
            all_branches: true
            tags: true

  # Build nightly releases
  - stage: Nightly
    name: Nightly Builds
    if: type = cron
    addons:
      apt:
        packages:
          - jq
          - docker-ce
    services:
        - docker
    before_script: . ./scripts/travis-setup-credentials.sh
    script: true
    deploy:
      - provider: script
        script: ./scripts/docker-release.sh daily
