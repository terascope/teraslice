sudo: required
language: node_js
node_js:
- '8'
addons:
  apt:
    packages:
      - docker-ce
      - jq
services:
  - docker
  - elasticsearch
before_install:
  # install latest docker-compose
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  # install latest yarn
  - curl -o- -L https://yarnpkg.com/install.sh | bash
  - export PATH="$HOME/.yarn/bin:$PATH"
  # make it colorful
  - export FORCE_COLOR=1
install:
  - yarn install --no-progress
  - yarn setup
before_deploy:
jobs:
  # stop if given a reason
  fast-finish: true
  include:

  # tests only on master and on pull-request
  - stage: Tests
    name: Test Packages
    if: branch = master
    script:
        - '[[ -z "$DEBUG" ]] && yarn test:ci || yarn test:debug | yarn bunyan -o short'
    after_success:
      - bash <(curl -s https://codecov.io/bash)

  # benchmarks and linting, only on pull-requests
  - script:
    name: Benchmarks and Linting
    if: branch = master AND type = pull_request
    sudo: false
    services: []
    addons: []
    before_install:
      # install latest yarn
      - curl -o- -L https://yarnpkg.com/install.sh | bash
      - export PATH="$HOME/.yarn/bin:$PATH"
    script:
        - yarn lint
        - yarn benchmark

  # test end-to-end tests, only on pull-requests
  - script:
    name: End-to-End Tests
    if: branch = master AND type = pull_request
    services: []
    before_script: cd e2e
    script: yarn test:ci

  # if not tag is preset and is on master release any changed versions to NPM
  - stage: Release (NPM)
    name: Release
    if: tag IS blank AND branch = master AND type != pull_request
    sudo: false
    before_install:
      # install latest yarn
      - curl -o- -L https://yarnpkg.com/install.sh | bash
      - export PATH="$HOME/.yarn/bin:$PATH"
    script: cp README.md ./packages/teraslice/README.md
    before_deploy: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
    deploy:
      - provider: script
        skip_cleanup: true
        script: yarn publish:changed
