# set the dist to bionic
dist: bionic
os: linux
language: node_js
node_js: '10.19'
# use a smaller depth for faster builds
git:
  depth: 10

cache:
  npm: false
  yarn: false

before_install: . ./scripts/ci-setup.sh
install:
  - export YARN_SETUP_ARGS="--prod=false --silent"
  - yarn setup

# set up build matrix
# specify jobs (stages are serial, and scripts are parallel within a stage)
jobs:
  # stop if given a reason
  fast_finish: true

  include:
    - stage: "Verify"
      name: 'Verify Build'
      node_js: '10.19'
      # run on any pull_request
      if: branch = master AND type IN (pull_request)
      # only cache on verify build
      cache:
        npm: false
        yarn: false
        directories:
          - '$TRAVIS_BUILD_DIR/.eslintcache'
      script:
        - yarn lint
        - yarn sync --verify

    - stage: "Tests"
      name: 'Unit Test Suite (node 10)'
      node_js: '10.19'
      # run only on pull-requests or cron
      if: branch = master AND type IN (pull_request, cron)
      script: yarn --silent test --suite unit-a

    - name: 'Unit Test Suite (node 12)'
      node_js: '12.16'
      # run only on pull-requests or cron
      if: branch = master AND type IN (pull_request, cron)
      script: yarn --silent test --suite unit-b

    - script:
      name: 'ES Test Suite (elasticsearch 6) (node 12)'
      node_js: '12.16'
      # run only on pull-requests and cron
      if: branch = master AND type IN (pull_request, cron)
      script: yarn --silent test --suite elasticsearch --elasticsearch-version 6.8.6 --elasticsearch-api-version 6.5

    - script:
      name: 'ES Test Suite (elasticsearch 7) (node 10)'
      node_js: '12.16'
      # run only on pull-requests
      if: branch = master AND type IN (pull_request) AND commit_message !~ /^WIP/
      script: yarn --silent test --suite elasticsearch --elasticsearch-version 7.2.1 --elasticsearch-api-version 7.0 --report-coverage false

    - script:
      name: 'End-to-End Test Suite (elasticsearch 6) (node 10)'
      node_js: '12.16'
      # run only on pull-requests and cron
      if: branch = master AND type IN (pull_request, cron) AND fork = false
      script: yarn --silent --cwd e2e test

    - stage: "Releases"
      name: 'Publish prerelease packages and docker image'
      # Run on pull-request and when the commit message includes a prerelease bump
      if: branch = master AND type IN (pull_request) AND commit_message =~ /bump:.*\((premajor|preminor|prepatch|prerelease)\).*/
      script:
        - yarn ts-scripts publish -t prerelease npm
        - yarn ts-scripts publish -t prerelease docker

    - script:
      name: 'Publish packages, docs and expiremental docker image'
      node_js: '12.16'
      # run a push to master
      if: tag IS blank AND branch = master AND type NOT IN (pull_request, cron)
      script:
        # publish to NPM first
        - yarn ts-scripts publish -t latest npm
        # run the tests with coverage coverage
        - yarn test
        # Publish to dev docker image
        - yarn ts-scripts publish -t dev docker
        # do this last
        - ./scripts/publish-documentation.sh

    - script:
      name: 'Create Tag Release'
      # run on tagged releases
      if: tag IS present AND type NOT IN (pull_request, cron)
      # no need to run test on tagged release
      script: true
      deploy:
        - provider: script
          skip_cleanup: true
          script: yarn ts-scripts publish -t tag npm
          on:
            all_branches: true
            tags: true
        - provider: script
          skip_cleanup: true
          script: yarn ts-scripts publish -t tag docker
          on:
            all_branches: true
            tags: true

    # Build nightly releases
    - script:
      name: 'Daily Docker Builds'
      # run on cron jobs
      if: type = cron
      script: true
      deploy:
        - provider: script
          skip_cleanup: true
          script: yarn ts-scripts publish -t daily docker
