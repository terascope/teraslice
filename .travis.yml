# set the dist to bionic
dist: bionic
language: node_js
node_js:
- '10.16'

cache:
  npm: false
  directories:
    - "$HOME/.travis-cache"

before_install:
    # make it colorful
    - export FORCE_COLOR=1
    # setup the cache dir
    - export CACHE_DIR="$HOME/.travis-cache"
    - mkdir -p "$CACHE_DIR"
    # setup an credentials
    - . ./scripts/travis-setup-credentials.sh
install:
    # Install the dependencies
    - yarn
    # Build setup the build
    - yarn setup

# set up build matrix
# specify jobs (stages are serial, and scripts are parallel within a stage)
jobs:
  # stop if given a reason
  fast-finish: true

  include:
  - stage: Verify
    name: Verify Build
    if: branch = master AND type = pull_request
    before_script:
        - yarn --cwd=./packages/ui-core build
        - yarn --cwd=./packages/ui-data-access build
    script: yarn lint

  - stage: Test Suites
    name: Unit Test Suite (node 8)
    if: branch = master
    node_js:
        - '8.16'
    script: yarn test --suite unit
    after_success:
        - bash <(curl -s https://codecov.io/bash)

  - script:
    name: Unit Test Suite (node 10)
    if: branch = master
    node_js:
        - '10.16'
    script: yarn test --suite unit
    after_success:
        - bash <(curl -s https://codecov.io/bash)

  - script:
    name: ElasticSearch Test Suite (6.8)
    if: branch = master
    node_js:
        - '8.16'
    before_script: . ./scripts/travis-install-es.sh 6.8.1
    script: yarn test --suite elasticsearch
    after_success:
        - bash <(curl -s https://codecov.io/bash)

  # test end-to-end tests, only on pull-requests
  - script:
    name: End-to-End Test Suite
    if: branch = master AND type IN (pull_request, cron) AND fork = false
    services:
        - docker
    before_script:
        - . ./scripts/travis-install-es.sh 6.8.1
        - . ./scripts/travis-install-kafka.sh
    script: yarn test --suite e2e
    after_success:
        - bash <(curl -s https://codecov.io/bash)

  # if not a tagged build and is on master
  - stage: Publish
    name: NPM Publish & Publish Documentation
    if: tag IS blank AND branch = master AND type NOT IN (pull_request, cron)
    addons:
      apt:
        packages:
          - jq
    script: yarn docs
    deploy:
      - provider: script
        skip_cleanup: true
        script: ./scripts/publish-packages.sh
      - provider: script
        skip_cleanup: true
        script: ./scripts/publish-documentation.sh

  # Experimental docker release
  - script: Experimental
    name: Update Experimental Docker Image
    if: branch = master AND type NOT IN (pull_request, cron)
    addons:
      apt:
        packages:
          - jq
          - docker-ce
    services:
        - docker
    script: true
    deploy:
      - provider: script
        script: ./scripts/docker-release.sh dev
        on:
            all_branches: true
            tags: true

  # Create tagged releases
  - stage: Release
    name: Release
    if: tag IS present AND type NOT IN (pull_request, cron)
    addons:
      apt:
        packages:
          - jq
          - docker-ce
    services:
        - docker
    script: yarn docs
    deploy:
      - provider: script
        script: ./scripts/docker-release.sh tag
        on:
            all_branches: true
            tags: true
      - provider: script
        script: ./scripts/publish-packages.sh
        on:
            all_branches: true
            tags: true

  # Build nightly releases
  - stage: Nightly
    name: Nightly Builds
    if: type = cron
    addons:
      apt:
        packages:
          - jq
          - docker-ce
    services:
        - docker
    script: true
    deploy:
      - provider: script
        script: ./scripts/docker-release.sh daily
