replicas: {{ .Values | get "opensearch2.instances" 1 }}

{{- if eq (.Values | get "opensearch2.instances" 1) 1 }}
singleNode: true
{{- else }}
singleNode: false
{{- end }}

image:
    tag: {{ .Values | get "opensearch2.version" "2.15.0" }}

service:
    type: NodePort
    port: 9200
    nodePort: {{ .Values | get "opensearch2.nodePort" "30210" }}

config:
    opensearch.yml:
        {{- if eq (.Values | get "opensearch2.instances" 1) 1 }}
        discovery.type: single-node
        {{- end }}
        {{- if eq (.Values | get "opensearch2.ssl.enabled" false) true}}
        plugins.security.ssl.transport.pemcert_filepath: certs/opensearch-cert.pem
        plugins.security.ssl.transport.pemkey_filepath: certs/opensearch-key.pem
        plugins.security.ssl.transport.pemtrustedcas_filepath: certs/CAs/rootCA.pem  # Root CA

        plugins.security.ssl.http.enabled: true
        plugins.security.ssl.http.pemcert_filepath: certs/opensearch-cert.pem
        plugins.security.ssl.http.pemkey_filepath: certs/opensearch-key.pem
        plugins.security.ssl.http.pemtrustedcas_filepath: certs/CAs/rootCA.pem  # Root CA

        plugins.security.authcz.admin_dn:
            - "{{ .Values | get "opensearch2.ssl.admin_dn" "" }}"
        {{- end }}

extraEnvs:
    {{- if eq (.Values | get "opensearch2.ssl.enabled" false) true}}
    - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
      value: "passwordsufhbivbU123%$"
    {{- else }}
    - name: DISABLE_SECURITY_PLUGIN
      value: "true"
    {{- end }}

clusterName: opensearch2-cluster

masterService: "opensearch2"

opensearchJavaOpts: {{ .Values | get "opensearch2.esJavaOpts" "-Xmx512M -Xms512M" }}

resources:
    requests:
        cpu: "1000m"
        memory: {{ .Values | get "opensearch2.memoryLimit" "100Mi" }}

persistence:
    size: {{ .Values | get "opensearch2.persistentVolumeSize" "8Gi" }}

{{- if eq (.Values | get "opensearch2.ssl.enabled" false) true }}
extraVolumes:
    - name: certs
      hostPath:
        path: /certs
        type: Directory
extraVolumeMounts:
    - name: certs
      mountPath: /usr/share/opensearch/config/certs
      readOnly: false

##@ This extra container is used launch the security admin script
##@ https://opensearch.org/docs/latest/security/configuration/security-admin/
extraContainers:
  - name: security-admin-init
    image: opensearchproject/opensearch:{{ .Values | get "opensearch2.version" "2.15.0" }}
    command: ["/bin/sh", "-c"]
    args:
      - |
        echo "Waiting for OpenSearch to be ready..."
        until curl -k --silent --output /dev/null https://opensearch2.services-dev1:9200; do
          echo "Still waiting..."
          sleep 5
        done
        echo "Building securityConfig Directory..."
        mkdir -p /usr/share/opensearch/plugins/opensearch-security/securityconfig
        cp -R /usr/share/opensearch/config/opensearch-security/* \
        /usr/share/opensearch/plugins/opensearch-security/securityconfig/
        cp /usr/share/opensearch/config/certs/internal_users.yml \
        /usr/share/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml
        echo "Successfully build security config!"
        echo "Running securityadmin.sh..."
        /usr/share/opensearch/plugins/opensearch-security/tools/securityadmin.sh \
          -cd /usr/share/opensearch/plugins/opensearch-security/securityconfig/ \
          -icl \
          -nhnv \
          -cacert /usr/share/opensearch/config/certs/CAs/rootCA.pem \
          -cert /usr/share/opensearch/config/certs/opensearch-cert.pem \
          -key /usr/share/opensearch/config/certs/opensearch-key.pem \
          -h opensearch2.services-dev1
        echo "Security initialized successfully!"
        sleep 1000000
    volumeMounts:
      - name: certs
        mountPath: /usr/share/opensearch/config/certs
{{- end }}
