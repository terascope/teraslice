image:
  repository: minio/minio
  tag: {{ .Values | get "minio.version" "RELEASE.2024-08-29T01-40-52Z" }}
  pullPolicy: IfNotPresent

tls:
  enabled: {{ .Values | get "minio.tls.enabled" false }}
  ## Create a secret with private.key and public.crt files and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
  certSecret: {{ .Values | get "minio.tls.certSecret" "tls-ssl-minio" }}
  publicCrt: {{ .Values | get "minio.tls.publicCrtName" "public.crt" }}
  privateKey: {{ .Values | get "minio.tls.privateKeyName" "private.key" }}

replicas: {{ .Values | get "minio.instances" 1 }}

{{- if eq (.Values | get "minio.instances" 1) 1 }}
mode: standalone
{{- else }}
mode: distributed
{{- end }}

minioAPIPort: "9000"
minioConsolePort: "9001"
rootUser: {{ .Values | get "minio.rootUser" "minioadmin" }}
rootPassword: {{ .Values | get "minio.rootPassword" "minioadmin" }}

consoleService:
  type: NodePort
  port: 9001
  nodePort: 30901

service:
  type: NodePort
  port: 9000
  nodePort: 30900

resources:
  requests:
    memory: 256Mi

persistence:
  size: {{ .Values | get "minio.persistentVolumeSize" "50Gi" }}

{{- if eq (.Values | get "minio.tls.enabled" false) true }}

volumes:
  - name: secret-volume
    secret:
      secretName: tls-ssl-minio
      items:
      - key: public.crt
        path: public.crt
      - key: private.key
        path: private.key
      - key: rootCA.pem
        path: CAs/rootCA.pem

volumeMounts:
    - name: secret-volume
      mountPath: /root/.minio/certs

{{- end }}
