replicaCount: 1

image:
    repository: {{ .Values | get "teraslice.image.repository" }}
    tag: {{ .Values | get "teraslice.image.tag" }}

service:
    type: NodePort
    nodePort: 30678
    targetPort: 5678

terafoundation:
    environment: development
    log_level: info
    workers: 1
    connectors:
        elasticsearch-next:
            # Set the first OS/ES that is enabled as our default
            default:
                node:
                    ##@ In the case the "stateCluster" is opensearch2
                    {{- if eq (.Values | get "teraslice.stateCluster" "none") "opensearch2" }}

                    ##@ In the case the "stateCluster" is opensearch2 and ssl is enabled
                    {{- if eq (.Values | get "opensearch2.ssl.enabled" false) true}}
                    - "https://opensearch2.services-dev1:9200"
                    {{- else}}
                    - "http://opensearch2.services-dev1:9200"
                    {{- end }}

                    ##@ In the case the "stateCluster" is opensearch1
                    {{- else if eq (.Values | get "teraslice.stateCluster" "none") "opensearch1" }}
                    - "http://opensearch1.services-dev1:9200"

                    ##@ In the case the "stateCluster" is elasticsearch6
                    {{- else if eq (.Values | get "teraslice.stateCluster" "none") "elasticsearch6" }}
                    - "http://elasticsearch6-master.services-dev1:9200"

                    ##@ In the case the "stateCluster" is elasticsearch7
                    {{- else if eq (.Values | get "teraslice.stateCluster" "none") "elasticsearch7" }}
                    - "http://elasticsearch7-master.services-dev1:9200"

                    {{- end }}


                {{- if eq (.Values | get "opensearch2.ssl.enabled" false) true}}

                username: admin
                password: "passwordsufhbivbU123%$"
                caCertificate: "{{- if .Values.opensearch2.ssl.caCert -}}

                {{ .Values.opensearch2.ssl.caCert }}

                {{- else -}}

                {{ fail "opensearch2.ssl.caCert MUST be provided so teraslice can get the rootCA" }}

                {{- end }}"

                {{- end }}

            ##@ /////////
            ##@ elasticsearch-next Opensearch1 connector
            ##@ /////////

            {{- if eq (.Values | get "opensearch1.enabled" false) true }}
            os1:
                node:
                     - "http://opensearch1.services-dev1:9200"
            {{- end }}

            ##@ /////////
            ##@ elasticsearch-next Opensearch2 connector
            ##@ /////////

            {{- if eq (.Values | get "opensearch2.enabled" false) true }}
            os2:
                node:
                    {{- if eq (.Values | get "opensearch2.ssl.enabled" false) true}}
                    - "https://opensearch2.services-dev1:9200"
                    {{- else }}
                    - "http://opensearch2.services-dev1:9200"
                    {{- end }}

                ##@ Set the username and password when ssl is enabled
                ##@ Required when using tls according to opensearch:
                ##@ The opensearch logs state this:
                ##@ "OpenSearch 2.12.0 onwards, the OpenSearch Security Plugin a change that requires an initial password for 'admin' user."
                {{- if eq (.Values | get "opensearch2.ssl.enabled" false) true}}

                username: admin
                password: "passwordsufhbivbU123%$"
                caCertificate: "{{- if .Values.opensearch2.ssl.caCert -}}

                {{ .Values.opensearch2.ssl.caCert }}

                {{- else -}}

                {{ fail "opensearch2.ssl.caCert MUST be provided so teraslice can get the rootCA" }}

                {{- end }}"

                {{- end }}
            {{- end }}

            ##@ /////////
            ##@ elasticsearch-next Elasticsearch6 connector
            ##@ /////////

            {{- if eq (.Values | get "elasticsearch6.enabled" false) true }}
            es6:
                node:
                    - "http://elasticsearch6-master.services-dev1:9200"
            {{- end }}

            ##@ /////////
            ##@ elasticsearch-next Elasticsearch7 connector
            ##@ /////////

            {{- if eq (.Values | get "elasticsearch7.enabled" false) true }}
            es7:
                node:
                    - "http://elasticsearch7-master.services-dev1:9200"
            {{- end }}


        ##@ Kafka connector
        {{- if eq (.Values | get "kafka.enabled" false) true }}
        kafka:
            default:
                brokers:
                    {{- if eq (.Values | get "kafka.ssl.enabled" false) true}}
                    - "kafka-headless.services-dev1:9094"
                    {{- else }}
                    - "kafka-headless.services-dev1:9092"
                    {{- end }}

                {{- if eq (.Values | get "kafka.ssl.enabled" false) true}}

                security_protocol: "ssl"

                caCertificate: "{{- if .Values.kafka.ssl.caCert -}}

                {{ .Values.kafka.ssl.caCert }}

                {{- else -}}

                {{ fail "kafka.ssl.caCert MUST be provided so teraslice can get the rootCA" }}

                {{- end }}"

                {{- end }}

        {{- end }}


        ##@ s3 connector
        {{- if eq (.Values | get "minio.enabled" false) true }}
        s3:
            default:
                {{- if eq (.Values | get "minio.tls.enabled" false) true }}

                endpoint: "https://minio.services-dev1:9000"
                sslEnabled: true
                caCertificate: "{{- if .Values.minio.tls.caCert -}}

                {{ .Values.minio.tls.caCert }}

                {{- else -}}

                {{ fail "minio.tls.caCert MUST be provided so teraslice can get the rootCA" }}

                {{- end }}"

                {{- else}}

                endpoint: "http://minio.services-dev1:9000"
                sslEnabled: false

                {{- end }}

                accessKeyId: {{ .Values | get "minio.rootUser" "minioadmin" }}
                secretAccessKey: {{ .Values | get "minio.rootPassword" "minioadmin" }}
                forcePathStyle: true
                region: "us-east-1"
        {{- end }}

master:
    teraslice:
        kubernetes_namespace: ts-dev1
        cluster_manager_type: kubernetesV2
        asset_storage_connection_type: {{ .Values | get "teraslice.asset_storage_connection_type" "elasticsearch-next" }}
        asset_storage_connection: {{ .Values | get "teraslice.asset_storage_connection" "default" }}
        name: "ts-dev1"

worker:
    teraslice:
        kubernetes_namespace: ts-dev1
        cluster_manager_type: kubernetesV2
        asset_storage_connection_type: {{ .Values | get "teraslice.asset_storage_connection_type" "elasticsearch-next" }}
        asset_storage_connection: {{ .Values | get "teraslice.asset_storage_connection" "default" }}
        name: "ts-dev1"
