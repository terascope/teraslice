name: Publish Teraslice NPM Packages, Documents and Docker Image, Create Release

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  build-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Register npm token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Verify npm authentication
        run: npm whoami

      # we login to docker to publish new teraslice image
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version:  22
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Install and build packages
        run: yarn && yarn setup

      - name: Verify npm authentication within yarn
        env:
          CI_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn npm whoami

      - name: Publish to npm
        env:
          CI_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn ts-scripts publish -t latest npm

      - name: Publish to docker
        run: yarn ts-scripts publish -t dev docker

  create-release-on-teraslice-bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version:  22
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Install semver-compare-cli
        run: yarn add semver-compare-cli

      - name: Check for teraslice version update
        id: version_check
        run: |
          # HEAD is the merge commit
          # HEAD^ is the previous commit (final commit of the PR)
          # BASE_COMMIT is the common ancestor (previous HEAD of master branch)
          BASE_COMMIT=$(git merge-base HEAD HEAD^)
          echo "base commit:" $BASE_COMMIT

          BASE_VERSION=$(git show $BASE_COMMIT:package.json | jq -r .version)
          echo "base version:" $BASE_VERSION

          CURRENT_VERSION=$(jq -r .version package.json)
          echo "current version:" $CURRENT_VERSION

          if ./node_modules/.bin/semver-compare $CURRENT_VERSION gt $BASE_VERSION; then
            echo "Teraslice version updated, creating release"
            echo "version_updated=true" >> $GITHUB_OUTPUT
            echo "tag=v$CURRENT_VERSION"
            echo "tag=v$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Teraslice version not updated, will not release"
            echo "version_updated=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        if: steps.version_check.outputs.version_updated == 'true'
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          tag_name: ${{ steps.version_check.outputs.tag }}
          name: ${{ steps.version_check.outputs.tag }}
          generate_release_notes: true

  build-docs:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version:  22
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Build documentation
        run: yarn && ./scripts/build-documentation.sh  # output in website/build
      - name: Check Output
        run: find ./website/build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./website/build

  publish-docs:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build-docs
    permissions:
      pages: write      # to deploy to Pages
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
