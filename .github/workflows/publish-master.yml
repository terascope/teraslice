name: Publish Teraslice NPM Packages, Documents and Docker Image

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  build-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Register npm token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Verify npm authentication
        run: npm whoami

      # we login to docker to publish new teraslice image
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version:  22
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Install and build packages
        run: yarn setup
        env:
          YARN_SETUP_ARGS: "--prod=false --silent"

      - name: Publish to npm
        run: yarn ts-scripts publish -t latest npm

      - name: Publish to docker
        run: yarn ts-scripts publish -t dev docker

  build-docs:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version:  22
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Build documentation
        run: ./scripts/build-documentation.sh  # output in website/build
      - name: Check Output
        run: find ./website/build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./website/build

  publish-docs:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build-docs
    permissions:
      pages: write      # to deploy to Pages
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
